//http://www.spoj.com/problems/DQUERY/

#include <bits/stdc++.h>
using namespace std;
int block_size=1;
bool comp(pair< pair<int,int> , int > p1 , pair< pair<int,int> , int > p2){
     
    int left1 = (p1.first.first)/block_size;
    int left2 = (p2.first.first)/block_size;
    if(left1!=left2){return left1 < left2;}
    return p1.first.second < p2.first.second;
}
int cnt[1000001];
int main() {
	 int n;
	 scanf("%d",&n);
	 int a[n];
	 for(int i=0;i<n;i++){
	     //cin>>a[i];
	     scanf("%d",&a[i]);
	 }
	 int q;
	 cin>>q;
	 pair< pair<int,int> , int > queries[q];
	 for(int i=0;i<q;i++){
	     scanf("%d%d",&queries[i].first.first,&queries[i].first.second);
	     queries[i].second=i;
	 }
	 block_size = ceil(sqrt(n));
	 sort(queries,queries+q,comp);
	 int mo_left=0;
	 int mo_right=-1;
	 int answers[q];
	 int count = 0;
	 for(int i=0;i<q;i++){
	     int ql = queries[i].first.first;
	     int qr = queries[i].first.second;
	     ql--;
	     qr--;
	     while(mo_right < qr){
	          mo_right++;
	          cnt[a[mo_right]]++;
	          if(cnt[a[mo_right]]==1)count++;
	     }
	     while(mo_right > qr){
	          cnt[a[mo_right]]--;
	          if(cnt[a[mo_right]]==0)count--;
	          mo_right--;
	     }
	     while(mo_left < ql){
	         cnt[a[mo_left]]--;
	         if(cnt[a[mo_left]]==0)count--;
	         mo_left++;
	     }
	     while(mo_left > ql){
	         mo_left--;
	         cnt[a[mo_left]]++;
	         if(cnt[a[mo_left]]==1)count++; 
	     }
	     answers[queries[i].second]=count;
	 }
	 for(int i=0;i<q;i++)
	  printf("%d\n",answers[i]);
	return 0;
}
